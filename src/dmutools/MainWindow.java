/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package dmutools;

import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.IOException;
import java.nio.charset.Charset;
import java.nio.charset.StandardCharsets;
import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.Paths;
import java.nio.file.StandardOpenOption;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.regex.Pattern;
import javax.swing.DropMode;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;

/**
 *
 * @author mats
 */
public class MainWindow extends javax.swing.JFrame {
    DmuProgram dmuProgram = new DmuProgram();
    ArrayList<String> measuredTmList;
    ArrayList<String> origTmList;
    
    


    /**
     * Creates new form MainWindow
     */
    public MainWindow() {
        
        initComponents();
        jLDMUList.setModel(dmuProgram.programLines);
        DmuTransferHandler dmuTransferHandler = new DmuTransferHandler();
        dmuTransferHandler.setDmuProgram(dmuProgram);
        jLDMUList.setTransferHandler(dmuTransferHandler);
        jLDMUList.setDragEnabled(true);
        jLDMUList.setDropMode(DropMode.ON_OR_INSERT);
        
        jLHolders.setDropMode(DropMode.ON_OR_INSERT);
        
        jTANewTm.setTransferHandler(new TmHandler());
        jTANewTm.setDragEnabled(true);
        
        jTAOrigTm.setTransferHandler(new TmHandler());
        jTAOrigTm.setDragEnabled(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTANewTm = new javax.swing.JTextArea();
        jButton1 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTAOrigTm = new javax.swing.JTextArea();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jCbIgnoreR = new javax.swing.JCheckBox();
        jPanel3 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        jLDMUList = new javax.swing.JList();
        jScrollPane3 = new javax.swing.JScrollPane();
        jLHolders = new javax.swing.JList();
        jLabel4 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jBtnCreateFromProgram = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Mätt tm");

        jTANewTm.setColumns(20);
        jTANewTm.setRows(5);
        jScrollPane1.setViewportView(jTANewTm);

        jButton1.setText("Läs in mätt tm");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(223, 223, 223)
                        .addComponent(jButton1)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jButton1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 358, Short.MAX_VALUE)
                .addContainerGap())
        );

        jLabel2.setText("Aktuell tm");

        jTAOrigTm.setColumns(20);
        jTAOrigTm.setRows(5);
        jScrollPane2.setViewportView(jTAOrigTm);

        jButton3.setText("Fyll i mätta värden");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("Spara");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jCbIgnoreR.setText("Ignorera R");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 602, Short.MAX_VALUE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(30, 30, 30)
                        .addComponent(jCbIgnoreR)
                        .addGap(45, 45, 45)
                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel2)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jButton3)
                        .addComponent(jButton4)
                        .addComponent(jCbIgnoreR)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 244, Short.MAX_VALUE)
                .addContainerGap())
        );

        jLabel3.setText("Lista från program");

        jLDMUList.setDragEnabled(true);
        jScrollPane4.setViewportView(jLDMUList);

        jLHolders.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "NB8-90", "NB8-135", "NB10-90", "NB10-135", "NB20-90", "NB20-135" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        jLHolders.setToolTipText("");
        jLHolders.setDragEnabled(true);
        jScrollPane3.setViewportView(jLHolders);

        jLabel4.setText("Hållare");

        jButton2.setText("Scanna program");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(109, 109, 109)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(116, 116, 116)
                        .addComponent(jButton2)))
                .addGap(0, 140, Short.MAX_VALUE))
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane4)
                    .addComponent(jScrollPane3))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jButton2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 253, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 346, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(90, Short.MAX_VALUE))
        );

        jBtnCreateFromProgram.setText("<<");
        jBtnCreateFromProgram.setToolTipText("");
        jBtnCreateFromProgram.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnCreateFromProgramActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addComponent(jBtnCreateFromProgram, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 21, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jBtnCreateFromProgram, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(246, 246, 246))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jBtnCreateFromProgramActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnCreateFromProgramActionPerformed
        createTmFromProgram();
    }//GEN-LAST:event_jBtnCreateFromProgramActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        openMeasuredTm();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        scanProgramFile();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        enterMeasuredValues();
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        saveOrigTm();
    }//GEN-LAST:event_jButton4ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new MainWindow().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBtnCreateFromProgram;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JCheckBox jCbIgnoreR;
    private javax.swing.JList jLDMUList;
    private javax.swing.JList jLHolders;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTextArea jTANewTm;
    private javax.swing.JTextArea jTAOrigTm;
    // End of variables declaration//GEN-END:variables

    private void openMeasuredTm() {
        JFileChooser jfc = new JFileChooser();
        int jfcResult = jfc.showOpenDialog(null);
        if (jfcResult == JFileChooser.APPROVE_OPTION) {
            measuredTmList = readTmFile(jfc.getSelectedFile());
            for ( String line : measuredTmList) {
                jTANewTm.append(line + "\n");
            }
        }
    }

    private ArrayList<String> readTmFile(File selectedFile) {
        ArrayList<String> stringList = new ArrayList<>();
        try {
            try (BufferedReader reader = Files.newBufferedReader( selectedFile.toPath() , Charset.defaultCharset())) {
                String line;
                while (( line = reader.readLine()) != null ) {
                    stringList.add(line);
                }
            }
            return stringList;
        } catch (IOException ex) {
            Logger.getLogger(MainWindow.class.getName()).log(Level.SEVERE, null, ex);
            return null;
        }
    }

    private void scanProgramFile() {
        
        JFileChooser jfc = new JFileChooser();
        int jfcResult = jfc.showOpenDialog(null);
        if (jfcResult == JFileChooser.APPROVE_OPTION) {
            dmuProgram.readFile( jfc.getSelectedFile() );
            
        }

    }

    private ArrayList<String> readProgramEvents(File selectedFile) {
        ArrayList<String> stringList = new ArrayList<>();
        try {
            try (BufferedReader reader = Files.newBufferedReader( selectedFile.toPath() , Charset.defaultCharset())) {
                String line;
                while (( line = reader.readLine()) != null ) {
                    if ( line.matches(".*\\(.*\\).*")) {
                        stringList.add(line);
                    } else if ( line.matches(".*T.*")) {
                        stringList.add(line);
                    }
                }
            }
            return stringList;
        } catch (IOException ex) {
            Logger.getLogger(MainWindow.class.getName()).log(Level.SEVERE, null, ex);
            return null;
        }
    }

    private void openOrigTm() {
        JFileChooser jfc = new JFileChooser();
        int jfcResult = jfc.showOpenDialog(null);
        if (jfcResult == JFileChooser.APPROVE_OPTION) {
            origTmList = readTmFile(jfc.getSelectedFile());
            for ( String line : origTmList) {
                jTAOrigTm.append(line + "\n");
            }
        }

    }

    private void createTmFromProgram() {
        dmuProgram.appendToolListFromProgramEvents(jTAOrigTm);
    }

    private void enterMeasuredValues() {
        readOrigTmListFromTA();
        readMeasuredTmListFromTA();
        if ( measuredTmList == null ) return;
        for ( String line : measuredTmList ) {
            TmLine tmLine = new TmLine( line );
            int toolNo = tmLine.readToolNo();
            String lValue = tmLine.readLValue();
            String rValue = tmLine.readRValue();
            boolean hasRValue = tmLine.hasRValue();
            System.out.println("TNo " + toolNo + "  LVal " + lValue + "  RVal " + rValue );
            replaceTmValues( origTmList, toolNo, lValue, rValue, jCbIgnoreR.isSelected(), hasRValue );
        }
        setOrigTmTA(origTmList);
    }

    private void replaceTmValues(ArrayList<String> origTmList, int toolNo, String lValue, String rValue, boolean ignoreR, boolean hasRValue ) {
        for ( int i = 0 ; i < origTmList.size() ; i++ ) {
            String line = origTmList.get(i);
            TmLine tmLine = new TmLine(line);
            if ( ignoreR ) {
                if ( tmLine.hasRValue() ) {
                    rValue = tmLine.rValue;
                } else {
                    rValue = null;
                }
            }
            if ( toolNo == tmLine.readToolNo()) {
                tmLine.setLValue(lValue);
                tmLine.setRValue(rValue);
                line = tmLine.getLine();
                origTmList.set(i, line);
            }
        }
    }

    private void readOrigTmListFromTA() {
        origTmList = new ArrayList<>();
        String text = jTAOrigTm.getText();
        String[] textArr = text.split("\n");
        for ( int i = 0 ; i < textArr.length ; i++ ) {
            origTmList.add(textArr[i]);
        }
            
    }

    private void setOrigTmTA(ArrayList<String> origTmList) {
        jTAOrigTm.setText("");
        for ( String line : origTmList ) {
            jTAOrigTm.append( line + "\n");
        }
    }

    private void saveOrigTm() {
        // Use a file chooser dialog.
        JFileChooser jfc = new JFileChooser();
        int returnVal = jfc.showSaveDialog(null);
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            // User wants the file saved 
            Path p = Paths.get(jfc.getSelectedFile().getAbsolutePath());
            if ( Files.exists( p ) ) {
                int retVal = JOptionPane.showConfirmDialog(null, "Filen finns. Skriva över?", "Filen finns", JOptionPane.YES_NO_OPTION);
                if ( retVal == JOptionPane.YES_OPTION ) {
                    try {
                        // Delete the file
                        Files.delete(p);
                    } catch (IOException ex) {
                        JOptionPane.showMessageDialog(null, "Kunde inte ta bort den gamla offsetfilen. " + ex.getMessage());
                        return;
                    }
                }
            }
            try {
                // Do the save.
                BufferedWriter bw = Files.newBufferedWriter(p, StandardCharsets.UTF_8, StandardOpenOption.CREATE);
                String[] lines = jTAOrigTm.getText().split("\n");
                for (String line : lines) {
                    bw.write(line + "\n");
                }
                bw.close();
            } catch (IOException ex) {
                JOptionPane.showMessageDialog(null, "Kunde inte spara offsetfilen. " + ex.getMessage());
            }
        }
    }

    private void readMeasuredTmListFromTA() {
        measuredTmList = new ArrayList<>();
        String text = jTANewTm.getText();
        String[] textArr = text.split("\n");
        for (String line : textArr) {
            measuredTmList.add(line);
        }
    }


}
